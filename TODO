Structure:
/- Where to put added libraries (in libs/, external/, extras/, or some other folder)
/- Where to put compiled library files (.a and .o) in libs/ or bin/
/- Consider moving folders from in src/ to project root (to look the same as Visual Studio Projects),
/  And if so, where to put binary files, in bin/ at project root or per project folder.
/- Copy folder structure for include/ directory, and make it work with CMake,
/   Or remove the structure for include and src entirely

Documentation/Doxygen:
- Get PDF working
- Get main page looking better
/- Only create documentation on Release and not Debug
/- Create INSTALL file

Testing:
/- Whether to use CTest, GoogleTest, Unit-Tests, or some other framework
/- Prefer to write tests in C as well, but not necessarily
/- Consider dropping the testing library in favor of running tests directly from CMake
/- Where to put tests, in tests/ folder or put tests as close to source file

CMake:
/- Consider finding all sources from target_sources instead of GLOB
- Figure out how to change folder for different architecture and build modes
- Figure out how to have different configuration folders and only one dependency folder
- How to build library regardless of settings
/- Generate documentation in CMake
/- Run Tests from CMake
/- Consider making a scripts folder to hold a bash script to run CMake with proper configuration
/- Look into using install instead of moving the binaries
/- Try to make CMake --build . --config Debug and --config Release work

Git/GitHub:
/- Consider making each module a different git repository

Open Source:
- Contributing file
- Bug reports file

Extras:
- Get Project Logo
- Figure out what TRAVIS.yml and appveyor is
/- Use .editorconfig for consistancy
/- Configure .gitattributes futher
